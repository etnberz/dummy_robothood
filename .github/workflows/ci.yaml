name: RobotHood CI Pipeline

on:
  - push

env:
    ROBOTHOOD_PATH: /home/runner/work/robothood/
    BAPI_KEY: ${{ secrets.BAPI_KEY }}
    BAPI_SECRET: ${{ secrets.BAPI_SECRET }}
    DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}

jobs:
  linters:
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install .[tests]
        python -m pip install tox
    - name: flake8
      run: tox -e flake8
    - name: mypy
      run: tox -e mypy
    - name: black
      run: tox -e black
    - name: isort
      run: tox -e isort
    - name: pylint
      run: tox -e pylint
    - name: bandit
      run: tox -e bandit

  unit-tests:
    needs: [linters]
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.8]
        python-version-tox: [38]


    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install .[tests]
          python -m pip install tox
      - name: py${{ matrix.python-version-tox }}-unit-test
        run: tox -e py${{ matrix.python-version-tox }}-unit

  functional-tests:
    needs: [linters]
    runs-on: ${{matrix.platform}}
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.8]
        python-version-tox: [38]


    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install .[tests]
          python -m pip install tox
      - name: py${{ matrix.python-version-tox }}-functional-test
        run: tox -e py${{ matrix.python-version-tox }}-functional

  docker-image-build:
    needs: [unit-tests, functional-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
